name: CI - Test Pakoda Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Lint TypeScript (if available)
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          fi
        shell: bash

      - name: Test with demo project
        run: |
          cd ../playwright-demo
          npm install
          npx playwright install chromium
          npm test
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pakoda-report-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            playwright-demo/pakoda-report/
            playwright-demo/test-results/
          retention-days: 7

  build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check package can be built
        run: npm run build

      - name: Check package can be packed
        run: npm pack --dry-run

      - name: Validate package.json
        run: npm run prepublishOnly