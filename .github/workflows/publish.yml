name: Publish Pakoda Report to NPM

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd pakoda-report
          npm install

      - name: Build TypeScript
        run: |
          cd pakoda-report
          npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          cd pakoda-report
          npm install

      - name: Build TypeScript
        run: |
          cd pakoda-report
          npm run build

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd pakoda-report
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version")"
          git tag -a "v$(node -p "require('./package.json').version")" -m "Release v$(node -p "require('./package.json').version")"
          git push origin main --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Pakoda Report ${{ github.ref_name }}
          body: |
            ## ü•ü Pakoda Report Release ${{ github.ref_name }}
            
            ### Features
            - Beautiful modern HTML reporter for Playwright
            - Dark/Light theme support with smooth transitions
            - Interactive dashboard with real-time statistics
            - Advanced filtering and search functionality
            - Responsive design for all devices
            - Export functionality for report data
            
            ### Installation
            ```bash
            npm install pakoda-report --save-dev
            ```
            
            ### Usage
            Add to your `playwright.config.js`:
            ```javascript
            export default defineConfig({
              reporter: [
                ['list'],
                ['pakoda-report', { outputDir: 'pakoda-report' }]
              ],
            });
            ```
            
            See the [README](https://github.com/${{ github.repository }}/blob/main/README.md) for detailed documentation.
          draft: false
          prerelease: false

      - name: Publish to NPM
        run: |
          cd pakoda-report
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update README badges
        run: |
          cd pakoda-report
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Published pakoda-report@$PACKAGE_VERSION to NPM üéâ"

  notify:
    needs: [test, publish]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify success
        if: needs.publish.result == 'success'
        run: |
          echo "üéâ Successfully published pakoda-report to NPM!"
          echo "üì¶ Package: https://www.npmjs.com/package/pakoda-report"
          echo "üöÄ GitHub Release: https://github.com/${{ github.repository }}/releases/latest"

      - name: Notify failure
        if: needs.test.result == 'failure' || needs.publish.result == 'failure'
        run: |
          echo "‚ùå Failed to publish pakoda-report"
          echo "Please check the logs for details"